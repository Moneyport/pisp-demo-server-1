@startuml Credential Registration

title: Credential Registration (Part 1)

hide footbox

box "Mobile Device"
  actor Alice
  participant "PISP App" as App
end box
box "PISP"
  participant "PISP Server" as Server
end box
box "Mojaloop"
  participant "Third-party\nAPI Adapter" as Adapter
end box

'start flow
Alice -> App ++: I want to remember this device

App -> Server ++: ""**POST /consents/{ID}/generateChallenge**""\n\
""{""\n\
""}   // request body required?""

App <-- Server: ""**HTTP 202** (Accepted)""
deactivate App

Server -> Adapter ++: ""**POST /consents/{ID}/generateChallenge**""\n\
""{""\n\
""}   // request body required?""

Server <-- Adapter: ""**HTTP 202** (Accepted)""
deactivate Server

Adapter -> Adapter: Generate a new challenge

Adapter -> Server ++: ""**PUT /consents/{ID}**""\n\
""{""\n\
""  "requestId": string,""\n\
""  "initiatorId": string,""\n\
""  "participantId": string,""\n\
""  "scopes": [""\n\
""    {""\n\
""      "accountId": string,""\n\
""      "actions": [string]""\n\
""    }""\n\
""  ],""\n\
""  "credential": {""\n\
""    "id": null,""\n\
""    "credentialType": enum, // required?""\n\
""    "status": enum,""\n\
""    "challenge": {""\n\
""      "payload": string,    // base64""\n\
""      "signature": null""\n\
""    },""\n\
""    "payload": null""\n\
""  }""\n\
""}""

Adapter <-- Server: ""**HTTP 200** (OK)""

deactivate Adapter

Server -> App ++: Challenge has been generated.
Server <-- App

deactivate Server

...

note over Alice, Adapter
  PISP App uses FIDO registration flow to generate a new keypair and sign the challenge.
end note

...

@enduml
